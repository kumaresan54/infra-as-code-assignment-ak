name: "Deploy Infrastructure"
on:
  workflow_dispatch:
  push:
    branches: 
    - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt
        run: terraform fmt -check -recursive -no-color
        working-directory: terraform

      - name: Set up TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.52.0

      - name: Terraform lint
        run: tflint
        working-directory: terraform
        
  terraform_deploy:
    runs-on: ubuntu-latest
    needs: [ terraform_check ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "ap-south-1"
          role-to-assume: "arn:aws:iam::160071257600:role/GitHubActionsRole"

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform

      - name: Terraform Destroy
        if: always()  # This ensures the destroy runs even if the apply fails
        run: terraform destroy -auto-approve

  terraform_cleanup:
    runs-on: ubuntu-latest
    needs: [ terraform_deploy ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "ap-south-1"
          role-to-assume: "arn:aws:iam::160071257600:role/GitHubActionsRole-ak"

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: terraform

